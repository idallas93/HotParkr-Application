[{"/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/App.js":"1","/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/reportWebVitals.js":"2","/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/index.js":"3","/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/Components/LoginForm.js":"4","/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/context/GlobalContext.js":"5","/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/components/LoginForm.js":"6"},{"size":1632,"mtime":1607387683132,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607282017535,"results":"9","hashOfConfig":"8"},{"size":601,"mtime":1607297871333,"results":"10","hashOfConfig":"8"},{"size":1115,"mtime":1607377084571,"results":"11","hashOfConfig":"8"},{"size":991,"mtime":1607377028097,"results":"12","hashOfConfig":"8"},{"size":1115,"mtime":1607377084571,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"l2s40g",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/App.js",["28","29"],"import React, { useEffect, useReducer } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport LoginForm from \"./Components/LoginForm\";\nimport { useGlobalContext } from \"./context/GlobalContext\";\n\nfunction App() {\n  const [state, dispatch] = useGlobalContext()\n\n  useEffect(()=>{\n    checkLogin();\n    if (state.apiToken) loadMessage(\n    );\n  }, [state.apiToken])\n\n  const checkLogin = () => {\n    // get the user from local storage\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    // is there a user?\n    if (user) {\n      // put that user in the state\n      dispatch({ \n        type: \"LOGIN\", \n        email: user.email, \n        apiToken: user.token\n      });\n    }\n  }\n\n  const loadMessage = () => {\n    axios.get(\"/api/welcome\", {\n      headers: {\n        Authorization: `Bearer ${state.apiToken}`\n      }\n    }).then(({ data }) => {\n      const { message } = data;\n      dispatch({ type: \"GET_MESSAGE\", message })\n    }).catch(err => {\n      console.log(err)\n    }) \n  }\n\n  const logout = () => {\n    // remove the user from local storage\n    localStorage.removeItem(\"user\");\n    // remove the user from the state\n    dispatch({ type: \"LOGOUT\" })\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        \n          { state.apiToken ? (\n            <>\n              <p>{state.message}</p>\n              <button onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : <LoginForm /> }\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/reportWebVitals.js",[],"/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/index.js",[],"/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/Components/LoginForm.js",["30"],"import React, { useRef } from \"react\";\nimport axios from \"axios\";\nimport { useGlobalContext } from \"../context/GlobalContext\";\n\nconst LoginForm = () => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [_, dispatch] = useGlobalContext();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // get the info from the form\n    const creds = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    }\n    // do the login with the api\n    const { data } = await axios.post(\"/auth/login\", creds);\n    // put the email and token in the state\n    const { email, token } = data;\n    const apiToken = token;\n    console.log(apiToken);\n    dispatch({ \n      type: \"LOGIN\", \n      email, \n      apiToken: data.token });\n    localStorage.setItem(\"user\", JSON.stringify({ email, token }));\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" placeholder=\"email\" ref={emailRef} />\n      <input type=\"password\" placeholder=\"password\" ref={passwordRef} />\n      <button type=\"submit\">Login</button>\n    </form>\n  )\n}\n\nexport default LoginForm;","/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/context/GlobalContext.js",[],"/Users/isaacdallas/Desktop/bootcampProjectThree/project-three/client/src/components/LoginForm.js",["31"],{"ruleId":"32","severity":1,"message":"33","line":1,"column":28,"nodeType":"34","messageId":"35","endLine":1,"endColumn":38},{"ruleId":"36","severity":1,"message":"37","line":15,"column":6,"nodeType":"38","endLine":15,"endColumn":22,"suggestions":"39"},{"ruleId":"32","severity":1,"message":"40","line":9,"column":10,"nodeType":"34","messageId":"35","endLine":9,"endColumn":11},{"ruleId":"32","severity":1,"message":"40","line":9,"column":10,"nodeType":"34","messageId":"35","endLine":9,"endColumn":11},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkLogin' and 'loadMessage'. Either include them or remove the dependency array.","ArrayExpression",["41"],"'_' is assigned a value but never used.",{"desc":"42","fix":"43"},"Update the dependencies array to be: [checkLogin, loadMessage, state.apiToken]",{"range":"44","text":"45"},[391,407],"[checkLogin, loadMessage, state.apiToken]"]